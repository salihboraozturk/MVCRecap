@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}
<h2>Yazar Düzenleme</h2>
@using (Html.BeginForm("WriterProfile", "WriterPanel", FormMethod.Post))
{
    @Html.HiddenFor(x => x.WriterID, new { @class = "form-control" })
    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    @Html.Label("Yazar Soyadı")
    @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurname)
    @Html.Label("Yazar Maili")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    @Html.Label("Yazar Şifresi")
    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)
    @Html.Label("Yazar Görsel Linki")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    @Html.Label("Yazar Unvan")
    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterTitle)
    @Html.Label("Yazar hakkında")
    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)
    <br />
    <button class="btn btn-info">Yazarı Güncelle</button>
}



